project(yurco-examples)
cmake_minimum_required(VERSION 3.10)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
if ("${CMAKE_BUILD_TYPE}" STREQUAL "Release" AND NOT YURCO_TRANSPARENCY)
    set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
endif()
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-inline")
option(USE_SINGLE_THREAD "Disable multithread locking")
if (USE_SINGLE_THREAD)
    add_definitions(-DSINGLE_THREAD)
endif()
if (YURCO_TRANSPARENCY)
    add_definitions(-DYURCO_TRANSPARENCY)
    set(CMAKE_EXE_LINKER_FLAGS "-Wl,-wrap=read,-wrap=write,-wrap=close,-wrap=connect,-wrap=accept4,-wrap=recv,-wrap=recvfrom,-wrap=recvmsg,-wrap=send,-wrap=sendto,-wrap=sendmsg ${CMAKE_EXE_LINKER_FLAGS}")
endif()

include_directories(.)
add_subdirectory(unistd)
add_subdirectory(yurco)

add_executable(011_basic "011_basic.cpp")
target_link_libraries(011_basic unistd yurco)
add_executable(012_time "012_time.cpp")
target_link_libraries(012_time unistd yurco)
add_executable(013_exceptions "013_exceptions.cpp")
target_link_libraries(013_exceptions unistd yurco)
add_executable(014_terminate "014_terminate.cpp")
target_link_libraries(014_terminate unistd yurco)
add_executable(021_scheduler "021_scheduler.cpp")
target_link_libraries(021_scheduler unistd yurco)
add_executable(031_signals "031_signals.cpp")
target_link_libraries(031_signals unistd yurco)
